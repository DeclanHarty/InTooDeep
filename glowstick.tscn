[gd_scene load_steps=8 format=3 uid="uid://d288ideon7612"]

[ext_resource type="Texture2D" uid="uid://c2aevouebhh8" path="res://Assets/glowstick.png" id="1_o6fbv"]
[ext_resource type="Texture2D" uid="uid://5kim15eni4k7" path="res://Assets/2d_lights_and_shadows_neutral_point_light.webp" id="2_xuiu7"]
[ext_resource type="Script" path="res://glowstick_interact.gd" id="3_sf0da"]

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_cqa23"]
blend_mode = 1

[sub_resource type="GDScript" id="GDScript_3etbr"]
script/source = "extends CharacterBody2D


const SINKING_ACCELERATION = 25;
const MAX_SINK_SPEED = 25;
var rot_v

func _ready():
	var turn_direction = randf_range(-1, 1)
	rot_v = randf_range(.1, 1) * (sign(turn_direction))
	


func _physics_process(delta: float) -> void:
	if(!is_on_floor()):
		velocity.y = move_toward(velocity.y, MAX_SINK_SPEED, SINKING_ACCELERATION * delta)
		rotation += rot_v * delta
	else:
		rot_v = 0;
		velocity = Vector2(0,0)

	move_and_slide()
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_q27we"]
radius = 2.0
height = 16.0

[sub_resource type="CircleShape2D" id="CircleShape2D_jleng"]
radius = 30.0167

[node name="Glowstick" type="Node2D"]
z_index = 2

[node name="CharacterBody2D" type="CharacterBody2D" parent="."]
material = SubResource("CanvasItemMaterial_cqa23")
collision_mask = 9
script = SubResource("GDScript_3etbr")

[node name="CollisionShape2D" type="CollisionShape2D" parent="CharacterBody2D"]
shape = SubResource("CapsuleShape2D_q27we")

[node name="PointLight2D" type="PointLight2D" parent="CharacterBody2D"]
color = Color(0.492, 0.82, 0.492, 0.580392)
texture = ExtResource("2_xuiu7")
texture_scale = 0.5

[node name="Sprite2D" type="Sprite2D" parent="CharacterBody2D"]
texture_filter = 1
texture = ExtResource("1_o6fbv")

[node name="Area2D" type="Area2D" parent="CharacterBody2D"]
collision_layer = 0
collision_mask = 8
script = ExtResource("3_sf0da")

[node name="CollisionShape2D2" type="CollisionShape2D" parent="CharacterBody2D/Area2D"]
shape = SubResource("CircleShape2D_jleng")

[connection signal="body_entered" from="CharacterBody2D/Area2D" to="CharacterBody2D/Area2D" method="_on_body_entered"]
